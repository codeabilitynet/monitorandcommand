In order for things to work in your environment, you have to set the Ip address of your test machine
as the "server address" to which all the devices are pointing. Except for the Netduino project, which 
"hardcodes" it, the server Ip address is set in the App.config of the respective projects.

If you do not have NETMF/WindowsPhone SDK installed, unload the projects that require it. 

The T-SQL project contains all the scripts required to build the database used by the WCF "logging" 
service (exposed through the MVC Web Application).

To start the "Test" environment, in "multiple start up" projects, set "Start" for the following projects:
- Demo.ServerConsole;
- Test.DeviceConsole;
- Test.RemoteConsole;
- Test.MFDeviceConsole.

To start the "Demo" environment presented in the showcase video(s), in "multiple start up" projects, set "Start" for the following projects:
- Demo.WpfServer (on Windows only) or Demo.Console (on Windows or Raspberry Pi); 
- Test.DeviceConsole, using the "Data Generator" option; 
- Demo.WindowsPhoneController;
- Demo.AndroidPhoneController;
- Demo.WpfMonitor;
- Demo.WindowsMonitor;
- for Raspberry Pi users having a Pibrella board, Demo.RaspberryPi;
- for Netduino users:
-- Demo.Netduino3Wifi referencing processes from Netduino.Processes to address DS18B20, HIH4000 sensors and MCP4921 converter;
-- Demo.NetduinoPlus referencing Process class from Netduino.Processes.

Note for Netduino users :
- Netduino.Tools.DS18B20 uses OneWire and will only work with NetMF 4.2 or higher;
- Netduino.Tools.LEDs will run on NetMF 4.2/4.3 , provided that the project is targeting the appropriate framework version;
- Netduino.* may require .dll and 'using' adaptation based on your particular hardware and software configuration.

C++/Wiring client code to integrate devices like Particle's Photon is available at http://github.com/codeabilitynet/monitorandcommandclientforparticlephoton