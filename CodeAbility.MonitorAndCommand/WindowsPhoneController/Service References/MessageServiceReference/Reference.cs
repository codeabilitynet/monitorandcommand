//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessageServiceReference.IMessageService")]
    public interface IMessageService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/StoreMessage", ReplyAction="http://tempuri.org/IMessageService/StoreMessageResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CodeAbility.MonitorAndCommand.Models.ContentTypes))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message>))]
        System.IAsyncResult BeginStoreMessage(CodeAbility.MonitorAndCommand.Models.Message message, System.AsyncCallback callback, object asyncState);
        
        void EndStoreMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/ListLastMessages", ReplyAction="http://tempuri.org/IMessageService/ListLastMessagesResponse")]
        System.IAsyncResult BeginListLastMessages(int numberOfMessages, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message> EndListLastMessages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/ListDeviceLastMessages", ReplyAction="http://tempuri.org/IMessageService/ListDeviceLastMessagesResponse")]
        System.IAsyncResult BeginListDeviceLastMessages(int numberOfMessages, string deviceName, string objectName, string parameterName, int rowInterval, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message> EndListDeviceLastMessages(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageServiceChannel : CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListLastMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListLastMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListDeviceLastMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListDeviceLastMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessageServiceClient : System.ServiceModel.ClientBase<CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService>, CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService {
        
        private BeginOperationDelegate onBeginStoreMessageDelegate;
        
        private EndOperationDelegate onEndStoreMessageDelegate;
        
        private System.Threading.SendOrPostCallback onStoreMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginListLastMessagesDelegate;
        
        private EndOperationDelegate onEndListLastMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onListLastMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginListDeviceLastMessagesDelegate;
        
        private EndOperationDelegate onEndListDeviceLastMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onListDeviceLastMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MessageServiceClient() {
        }
        
        public MessageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StoreMessageCompleted;
        
        public event System.EventHandler<ListLastMessagesCompletedEventArgs> ListLastMessagesCompleted;
        
        public event System.EventHandler<ListDeviceLastMessagesCompletedEventArgs> ListDeviceLastMessagesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService.BeginStoreMessage(CodeAbility.MonitorAndCommand.Models.Message message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStoreMessage(message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService.EndStoreMessage(System.IAsyncResult result) {
            base.Channel.EndStoreMessage(result);
        }
        
        private System.IAsyncResult OnBeginStoreMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            CodeAbility.MonitorAndCommand.Models.Message message = ((CodeAbility.MonitorAndCommand.Models.Message)(inValues[0]));
            return ((CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService)(this)).BeginStoreMessage(message, callback, asyncState);
        }
        
        private object[] OnEndStoreMessage(System.IAsyncResult result) {
            ((CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService)(this)).EndStoreMessage(result);
            return null;
        }
        
        private void OnStoreMessageCompleted(object state) {
            if ((this.StoreMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StoreMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StoreMessageAsync(CodeAbility.MonitorAndCommand.Models.Message message) {
            this.StoreMessageAsync(message, null);
        }
        
        public void StoreMessageAsync(CodeAbility.MonitorAndCommand.Models.Message message, object userState) {
            if ((this.onBeginStoreMessageDelegate == null)) {
                this.onBeginStoreMessageDelegate = new BeginOperationDelegate(this.OnBeginStoreMessage);
            }
            if ((this.onEndStoreMessageDelegate == null)) {
                this.onEndStoreMessageDelegate = new EndOperationDelegate(this.OnEndStoreMessage);
            }
            if ((this.onStoreMessageCompletedDelegate == null)) {
                this.onStoreMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStoreMessageCompleted);
            }
            base.InvokeAsync(this.onBeginStoreMessageDelegate, new object[] {
                        message}, this.onEndStoreMessageDelegate, this.onStoreMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService.BeginListLastMessages(int numberOfMessages, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListLastMessages(numberOfMessages, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message> CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService.EndListLastMessages(System.IAsyncResult result) {
            return base.Channel.EndListLastMessages(result);
        }
        
        private System.IAsyncResult OnBeginListLastMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int numberOfMessages = ((int)(inValues[0]));
            return ((CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService)(this)).BeginListLastMessages(numberOfMessages, callback, asyncState);
        }
        
        private object[] OnEndListLastMessages(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message> retVal = ((CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService)(this)).EndListLastMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListLastMessagesCompleted(object state) {
            if ((this.ListLastMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListLastMessagesCompleted(this, new ListLastMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListLastMessagesAsync(int numberOfMessages) {
            this.ListLastMessagesAsync(numberOfMessages, null);
        }
        
        public void ListLastMessagesAsync(int numberOfMessages, object userState) {
            if ((this.onBeginListLastMessagesDelegate == null)) {
                this.onBeginListLastMessagesDelegate = new BeginOperationDelegate(this.OnBeginListLastMessages);
            }
            if ((this.onEndListLastMessagesDelegate == null)) {
                this.onEndListLastMessagesDelegate = new EndOperationDelegate(this.OnEndListLastMessages);
            }
            if ((this.onListLastMessagesCompletedDelegate == null)) {
                this.onListLastMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListLastMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginListLastMessagesDelegate, new object[] {
                        numberOfMessages}, this.onEndListLastMessagesDelegate, this.onListLastMessagesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService.BeginListDeviceLastMessages(int numberOfMessages, string deviceName, string objectName, string parameterName, int rowInterval, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListDeviceLastMessages(numberOfMessages, deviceName, objectName, parameterName, rowInterval, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message> CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService.EndListDeviceLastMessages(System.IAsyncResult result) {
            return base.Channel.EndListDeviceLastMessages(result);
        }
        
        private System.IAsyncResult OnBeginListDeviceLastMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int numberOfMessages = ((int)(inValues[0]));
            string deviceName = ((string)(inValues[1]));
            string objectName = ((string)(inValues[2]));
            string parameterName = ((string)(inValues[3]));
            int rowInterval = ((int)(inValues[4]));
            return ((CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService)(this)).BeginListDeviceLastMessages(numberOfMessages, deviceName, objectName, parameterName, rowInterval, callback, asyncState);
        }
        
        private object[] OnEndListDeviceLastMessages(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message> retVal = ((CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService)(this)).EndListDeviceLastMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListDeviceLastMessagesCompleted(object state) {
            if ((this.ListDeviceLastMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListDeviceLastMessagesCompleted(this, new ListDeviceLastMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListDeviceLastMessagesAsync(int numberOfMessages, string deviceName, string objectName, string parameterName, int rowInterval) {
            this.ListDeviceLastMessagesAsync(numberOfMessages, deviceName, objectName, parameterName, rowInterval, null);
        }
        
        public void ListDeviceLastMessagesAsync(int numberOfMessages, string deviceName, string objectName, string parameterName, int rowInterval, object userState) {
            if ((this.onBeginListDeviceLastMessagesDelegate == null)) {
                this.onBeginListDeviceLastMessagesDelegate = new BeginOperationDelegate(this.OnBeginListDeviceLastMessages);
            }
            if ((this.onEndListDeviceLastMessagesDelegate == null)) {
                this.onEndListDeviceLastMessagesDelegate = new EndOperationDelegate(this.OnEndListDeviceLastMessages);
            }
            if ((this.onListDeviceLastMessagesCompletedDelegate == null)) {
                this.onListDeviceLastMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListDeviceLastMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginListDeviceLastMessagesDelegate, new object[] {
                        numberOfMessages,
                        deviceName,
                        objectName,
                        parameterName,
                        rowInterval}, this.onEndListDeviceLastMessagesDelegate, this.onListDeviceLastMessagesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService CreateChannel() {
            return new MessageServiceClientChannel(this);
        }
        
        private class MessageServiceClientChannel : ChannelBase<CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService>, CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService {
            
            public MessageServiceClientChannel(System.ServiceModel.ClientBase<CodeAbility.MonitorAndCommand.WindowsPhoneController.MessageServiceReference.IMessageService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginStoreMessage(CodeAbility.MonitorAndCommand.Models.Message message, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = message;
                System.IAsyncResult _result = base.BeginInvoke("StoreMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndStoreMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("StoreMessage", _args, result);
            }
            
            public System.IAsyncResult BeginListLastMessages(int numberOfMessages, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = numberOfMessages;
                System.IAsyncResult _result = base.BeginInvoke("ListLastMessages", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message> EndListLastMessages(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message> _result = ((System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message>)(base.EndInvoke("ListLastMessages", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginListDeviceLastMessages(int numberOfMessages, string deviceName, string objectName, string parameterName, int rowInterval, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = numberOfMessages;
                _args[1] = deviceName;
                _args[2] = objectName;
                _args[3] = parameterName;
                _args[4] = rowInterval;
                System.IAsyncResult _result = base.BeginInvoke("ListDeviceLastMessages", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message> EndListDeviceLastMessages(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message> _result = ((System.Collections.ObjectModel.ObservableCollection<CodeAbility.MonitorAndCommand.Models.Message>)(base.EndInvoke("ListDeviceLastMessages", _args, result)));
                return _result;
            }
        }
    }
}
