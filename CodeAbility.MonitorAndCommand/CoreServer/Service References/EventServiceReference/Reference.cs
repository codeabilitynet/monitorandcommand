//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeAbility.MonitorAndCommand.Server.EventServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EventServiceReference.IEventService")]
    public interface IEventService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/StoreEvent", ReplyAction="http://tempuri.org/IEventService/StoreEventResponse")]
        void StoreEvent(CodeAbility.MonitorAndCommand.Models.Event _event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/StoreEvent", ReplyAction="http://tempuri.org/IEventService/StoreEventResponse")]
        System.Threading.Tasks.Task StoreEventAsync(CodeAbility.MonitorAndCommand.Models.Event _event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/ListLastEvents", ReplyAction="http://tempuri.org/IEventService/ListLastEventsResponse")]
        CodeAbility.MonitorAndCommand.Models.Event[] ListLastEvents(int numberOfEvents);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/ListLastEvents", ReplyAction="http://tempuri.org/IEventService/ListLastEventsResponse")]
        System.Threading.Tasks.Task<CodeAbility.MonitorAndCommand.Models.Event[]> ListLastEventsAsync(int numberOfEvents);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEventServiceChannel : CodeAbility.MonitorAndCommand.Server.EventServiceReference.IEventService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EventServiceClient : System.ServiceModel.ClientBase<CodeAbility.MonitorAndCommand.Server.EventServiceReference.IEventService>, CodeAbility.MonitorAndCommand.Server.EventServiceReference.IEventService {
        
        public EventServiceClient() {
        }
        
        public EventServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EventServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void StoreEvent(CodeAbility.MonitorAndCommand.Models.Event _event) {
            base.Channel.StoreEvent(_event);
        }
        
        public System.Threading.Tasks.Task StoreEventAsync(CodeAbility.MonitorAndCommand.Models.Event _event) {
            return base.Channel.StoreEventAsync(_event);
        }
        
        public CodeAbility.MonitorAndCommand.Models.Event[] ListLastEvents(int numberOfEvents) {
            return base.Channel.ListLastEvents(numberOfEvents);
        }
        
        public System.Threading.Tasks.Task<CodeAbility.MonitorAndCommand.Models.Event[]> ListLastEventsAsync(int numberOfEvents) {
            return base.Channel.ListLastEventsAsync(numberOfEvents);
        }
    }
}
